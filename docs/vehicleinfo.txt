Vehicle Information hierarchy
=================

Service         org.automotive
Object path     /org/automotive/vehicleInfo/*



Interface:	org.automotive.VehicleId
Object path:	/org/automotive/vehicleInfo/VehicleId
Properties:

                string WMI [readonly]

			World Manufacturer Identifier as defined by SAE. 3 characters.

                string VIN [readonly]

			Vehicle Identification Number as defined by ISO 3779. 17 characters.

Interface:	org.automotive.size
Object path:	/org/automotive/vehicleInfo/size
Properties:

                int Width [readonly]
                width in mm

                Height [readonly]
                height in mm

                Length [readonly]
                length in mm

Interface:	org.automotive.fuelInfo
Object path:	/org/automotive/vehicleInfo/FuelInfo
Properties:

                byte Type [readonly]

                        type of fuel:
                        Gasoline,
                        High-Octane,
                        Diesel,
                        Electric,
                        Hydrogen

                byte RefuelPosition [readonly]

                        Position of refueling:
                        Left,
                        Right,
                        Front,
                        Rear

Interface:	org.automotive.VehicleType
Object path:	/org/automotive/vehicleInfo/VehicleType
Properties:

                byte VehicleType [readonly]
			
			Vehicle Type: Sedan = 0,
			Coupe = 1,
			Cabriole = 2,
			Roadster = 3,
			SUV = 4,
			Truck = 5

Interface:	org.automotive.DoorType
Object path:	/org/automotive/vehicleInfo/DoorType
Properties:

		array{ byte } DoorType [readonly]
			
			Number of doors in each row.  The index represents the row.  Position '0'
			represents the first row, '1' the second row etc.

			Example a common mini-van may have DoorType[0] = 2 doors,
			DoorType[1] = 1 (side door), DoorType[2] = 1 (trunk).

Interface:	org.automotive.EngineType
Object path:	/org/automotive/vehicleInfo/EngineType
Properties:

		byte EngineType [readonly]
		
			Gasoline = 0,
			Diesel = 1,
			Hybrid = 2,
			Electric = 3
	
Interface:	org.automotive.TransmissionGearType
Object path:	/org/automotive/vehicleInfo/TransmissionGearType
Properties:

		byte TransmissionGearType [readonly]
		
			Auto = 0,
			Manual = 1,
			CVT
			
Interface:	org.automotive.WheelInformation
Object path:	/org/automotive/vehicleInfo/WheelInformation
Properties:

		struct{ double, double } WheelInformation [readonly]
		
			Radius of Wheel, Wheel Track.
				
			
