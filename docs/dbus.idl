/*!
* \mainpage Automotive Message Broker DBus API Documentation
*
* \section intro Introduction
* AMB organizes the API into two general interface categories.  First the Manager interface (see manager.txt)
* which includes tools for using the other interfaces.  Second is a number of interfaces that
* represent vehicle data.  The latter follows the schema of "org.automotive.DataType" and are
* contained in verious DBus paths.  The DBus paths are generally organized by
* /{source}/{zone}/DataType.  "source" refers to the AMB source that produces the data.  "zone"
* refers to the zone in which the data type is located in the vehicle or "0" for no zone.
*
* The interfaces and data types are documented in <a href="amb_8idl_source.html">amb.idl</a>.  Franca IDL
* tools can be used to generate DBus introspection xml which can be used to generate bindings
* for your language of choice.
*
* \section basic_usage Basic Recommended Usage
*
* It is recomended that the Manager interface be used to find the DBus Object that contains the
* data type you need.  This is done through the FindObject() call.  It is expected that DBus
* Object Paths may change and so it is not appropriate to hard code DBus Object Paths.  
*
* \section example Usage Example
* Here is a pseudo-code example of how the api is to be used:
*
* \code
* var manager = dbus.interface("org.automotive.Manager", "/");
*
* var speedObjectPaths = manager.FindObject("VehicleSpeed");
*
* var speedObject = dbus.interface("org.automotive.VehicleSpeed", speedObjectPaths[0]);
*
* console.log("Vehicle Speed: " + speedObject.Speed);
* \endcode
*/
